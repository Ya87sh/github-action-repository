# Name of the workflow - Assigns a name to the workflow, making it easily identifiable within the GitHub Actions tab
name: CI Automated Workflow

# Defining 'Events' that will Trigger the Workflow
on:
  push: # Workflow is triggered whenever there is a push (i.e., commits are added) to the specified branches
    branches: [ "main" ] # Only pushes to the main branch will trigger this workflow.
  pull_request: # Workflow is triggered when a pull request is opened. Pull request validates changes before they are merged into the main branch
    branches: [ "main" ]

# Defining a job named 'build' that consists of a series of steps to execute
jobs:
  test:
    # Specifies the operating system and environment where the job will run.
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checks out (i.e., clones) the main repositoryâ€™s code into the runner so that subsequent steps can access it
    - name: Check out code
      uses: actions/checkout@v2 # 'actions/checkout@v2': checkout action provided by GitHub Actions. | @v2: Specifies the version of the action
    
    # Remember, without checking out the code, the runner wouldn't have access to your project's files
    # making it impossible to install dependencies or run tests.

    # Step 2: Set up Python Environment 
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    # Step 3: Install Dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r  requirements.txt
    
    # Step 4: Runs the pytest command, which looks for test files and functions in the codebase and executes them
    - name: Run test with pytest
      run: pytest
